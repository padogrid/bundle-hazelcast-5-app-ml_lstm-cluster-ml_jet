#
# Copyright (c) 2023 Netcrest Technologies, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Optional time format.
# Default: "yyyy-MM-dd'T'HH:mm:ss.SSSZ"
timeFormat: "yyyy-MM-dd'T'HH:mm:ss.SSSZ"

# Equations for generating stock quotes
equations:

  - name: stock1-jitter
    formula: y=tanh(x)
    description: tanh based stock quotes
    minBase: 0
    maxBase: 2
    baseSpread: 0.01
    jitter: 0.05
    multiplier: 30
    constant: 1
    calculationFunction: java.lang.Math.tanh

  - name: stock1-jitter-large
    formula: y=tanh(x)
    description: tanh based stock quotes
    minBase: 0
    maxBase: 2
    baseSpread: 0.01
    jitter: 0.25
    multiplier: 30
    constant: 1
    calculationFunction: java.lang.Math.tanh

  - name: stock1-no-jitter
    formula: y=tanh(x)
    description: tanh based stock quotes
    minBase: 0
    maxBase: 2
    baseSpread: 0.01
    jitter: 0
    multiplier: 30
    constant: 1
    calculationFunction: java.lang.Math.tanh

  - name: stock2-jitter
    formula: y=x^3+x^2+1
    description: cubic based stock quotes
    minBase: -1.2
    maxBase: 0.5
    jitter: 0.05
    multiplier: 100
    baseSpread: 0.005
    jitter: 0
    calculationFunction: padogrid.simulator.eq.Equations.cubic2

  - name: stock2-no-jitter
    formula: y=x^3+x^2+1
    description: cubic based stock quotes
    minBase: -1.2
    maxBase: 0.5
    multiplier: 100
    baseSpread: 0.005
    jitter: 0
    calculationFunction: padogrid.simulator.eq.Equations.cubic2

publishers:        

  # ---------
  # Hazelcast
  # ---------

  # journal
   # map
  - product: hazelcast
    enabled: true
    name: stock-publisher
    # weekly (7 days)
    timeInterval: 604_800_000
    equations:
      equationNames: [stock1-jitter, stock1-no-jitter, stock2-jitter, stock2-no-jitter, stock1-jitter-large]
      # It takes ~1 sec for simulator_forecast (Python) to compute.
      # To address this time lagging issue, SimulatorForecastJob (Java) automatically
      # buffers incoming data from the 'journal' map. That means you can safely set
      # 'equationDelay' to a value less than 1 sec. For our demo purpose, to make
      # the log files more legible, we set 'equationDelay' greater than 1 sec.
      # 1500 msec --> 1.5 sec
      equationDelay: 1500
    dataStructure:
      type: map
      name: journal
      keyType: SEQUENCE
   # map
