#!/usr/bin/env bash
SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
. $SCRIPT_DIR/.addonenv.sh

EXECUTABLE="`basename $0`"

if [ "$HELP" == "true" ]; then
cat <<EOF

NAME
   $EXECUTABLE - Build the LSTM app environment.

SYNOPSIS
   $EXECUTABLE [-?]

DESCRIPTION
   Builds the LSTM app environment.

DEFAULT
   $EXECUTABLE

EOF
   exit
fi

# Set the current PadoGrid version in pom.xml
pushd $APP_DIR > /dev/null
sed -i$__SED_BACKUP -e "s|<padogrid.version>.*$|<padogrid.version>$PADOGRID_VERSION</padogrid.version>|g" \
                    -e "s|<hazelcast.version>.*$|<hazelcast.version>$HAZELCAST_VERSION</hazelcast.version>|g" \
                    pom.xml
popd > /dev/null

# Install the required padogrid packages to the local repo
installMavenPadogridJar padogrid-common
installMavenPadogridJar padogrid-mqtt

# Remove old plugin versions from the workspace
rm $PADOGRID_WORKSPACE/plugins/ml-lstm-*.jar 2> /dev/null

# Install Jet job jars
pushd $APP_DIR > /dev/null
mvn clean install
popd > /dev/null

pushd $APP_DIR > /dev/null
# Update MQTT config files that have the deprecated attributes
# v0.9.29
if [ $PADOGRID_MAJOR_VERSION_NUMBER -eq 0 ] && [ $PADOGRID_MINOR_VERSION_NUMBER -eq 9 ] &&  [ $PADOGRID_UPDATE_VERSION_NUMBER -ge 29 ]; then
   sed -i${__SED_BACKUP} -e 's|pluginName:.*$|pluginNames: [hazelcast]|' etc/mqttv5-hazelcast.yaml
fi
popd > /dev/null

# Place the prebuilt models into the data/ml_results dir
echo "+ Copying prebuilt models into data/ml_results..."
if [ ! -d "$APP_DIR/data/ml_results" ]; then
   mkdir -p "$APP_DIR/data/ml_results"
fi
cp "$APP_DIR/etc/prebuilt_models/"* "$APP_DIR/data/ml_results/"

# Download required bundles
if [ ! -d "$APP_DIR/simulator" ]; then
   echo "+ Installing bundle-none-app-simulator..."
   install_bundle -download -quiet -force bundle-none-app-simulator

   echo "+ Copying/updating simulator configuration files..."
   cp "$APP_DIR/etc/simulator"* "$APPS_DIR/simulator/etc/"
   sed -i$__SED_BACKUP -e "s/<cluster\-name>.*/<cluster\-name>ml_jet<\/cluster-name>/" "$APPS_DIR/simulator/etc/hazelcast-client.xml"

   echo "+ Building simulator binaries..."
   # Update hazelcast version for the simulator
   pushd $APPS_DIR/simulator > /dev/null
   sed -i$__SED_BACKUP -e "s|<hazelcast.version>.*$|<hazelcast.version>$HAZELCAST_VERSION</hazelcast.version>|g" \
                       pom.xml
   popd > /dev/null
   # Build simulator
   pushd $APPS_DIR/simulator/bin_sh > /dev/null
   ./build_app
   popd > /dev/null
fi

#
# Display build information
#
cat <<EOF

Workspace: $PADOGRID_WORKSPACE

Build complete.

EOF
